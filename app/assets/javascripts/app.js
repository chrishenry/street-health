// Generated by CoffeeScript 1.10.0
(function() {
  var receta;

  receta = angular.module('receta', ['templates', 'ngAnimate', 'ngRoute', 'ngResource', 'controllers', 'uiGmapgoogle-maps', 'bsLoadingOverlay', 'bsLoadingOverlayHttpInterceptor', 'angular-flash.service', 'angular-flash.flash-alert-directive'])
  .factory('allHttpInterceptor', function(bsLoadingOverlayHttpInterceptorFactoryFactory) {
    return bsLoadingOverlayHttpInterceptorFactoryFactory();
  })
  .config(function($httpProvider) {
    $httpProvider.interceptors.push('allHttpInterceptor');
  }).run(function(bsLoadingOverlayService) {
    bsLoadingOverlayService.setGlobalConfig({
      templateUrl: 'loading-overlay-template.html'
    });
  });

  receta.config([
    '$routeProvider', function($routeProvider) {
      return $routeProvider.when('/', {
        templateUrl: "index.html",
        controller: 'MapController'
      });
    }
  ]);


  receta.filter('titlecase', function() {
      return function (input) {
          var smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i;

          input = input.toLowerCase();
          return input.replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g, function(match, index, title) {
              if (index > 0 && index + match.length !== title.length &&
                  match.search(smallWords) > -1 && title.charAt(index - 2) !== ":" &&
                  (title.charAt(index + match.length) !== '-' || title.charAt(index - 1) === '-') &&
                  title.charAt(index - 1).search(/[^\s-]/) < 0) {
                  return match.toLowerCase();
              }

              if (match.substr(1).search(/[A-Z]|\../) > -1) {
                  return match;
              }

              return match.charAt(0).toUpperCase() + match.substr(1);
          });
      }
  });

}).call(this);
